name: CI

on:
  push:
    paths-ignore:
      - '**/*.md'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          # Try npm ci first, fall back to npm install if it fails
          npm ci || (echo "npm ci failed, falling back to npm install" && npm install)

      - name: Create mock amplify_outputs.json for CI
        run: |
          cat > amplify_outputs.json << 'EOF'
          {
            "auth": {
              "user_pool_id": "mock-user-pool-id",
              "aws_region": "us-east-1",
              "user_pool_client_id": "mock-client-id",
              "identity_pool_id": "mock-identity-pool-id",
              "mfa_methods": [],
              "standard_required_attributes": ["email"],
              "username_attributes": ["email"],
              "user_verification_types": ["email"],
              "groups": [],
              "mfa_configuration": "NONE",
              "password_policy": {
                "min_length": 8,
                "require_lowercase": true,
                "require_numbers": true,
                "require_symbols": true,
                "require_uppercase": true
              },
              "unauthenticated_identities_enabled": true
            },
            "data": {
              "url": "https://mock-api-url.amazonaws.com/graphql",
              "aws_region": "us-east-1",
              "api_key": "mock-api-key",
              "default_authorization_type": "AMAZON_COGNITO_USER_POOLS",
              "authorization_types": ["API_KEY", "AWS_IAM"],
              "model_introspection": {
                "version": 1,
                "models": {},
                "enums": {},
                "nonModels": {}
              }
            },
            "version": "1.4"
          }
          EOF

      - name: Run lint checks
        run: npm run lint

      - name: Run tests
        run: npm run test:run

      - name: Run build
        run: npm run build
