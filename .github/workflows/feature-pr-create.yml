name: Create Release Pull Request

on:
  push:
    branches: ['feature/**', '!feature/**-test']

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check and Create Develop Branch
        run: |
          # リモートブランチ情報を取得
          git fetch origin
          # developブランチが存在するかチェック
          if ! git show-ref --verify --quiet refs/remotes/origin/develop; then
            echo "develop branch does not exist. Creating it..."
            # mainから新しいdevelopブランチを作成
            git checkout main
            git checkout -b develop
            git push origin develop
          else
            echo "develop branch already exists."
          fi

      - name: Check PullRequest Exists
        id: check_pr
        env:
          HEAD_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          COMMIT_MESSAGE=$(echo "${HEAD_MESSAGE}" | sed -n -e 1p)
          echo "message=${COMMIT_MESSAGE}" >> "$GITHUB_OUTPUT"
          echo "count=$(gh pr list -S '本番反映'in:title | wc -l)" >> "$GITHUB_OUTPUT"

      - name: Create Release Pull Request
        continue-on-error: true
        if: ${{ steps.check_pr.outputs.count == 0 }}
        run: |
          gh pr create \
            -B develop \
            -t '【本番反映】${{ steps.check_pr.outputs.message }}' \
            -a ${{ github.actor }}  \
            -r ${{ github.repository_owner }} \
            --body-file ./.github/RELEASE_WORKFLOW_TEMPLATE.md

      - name: Edit Release Pull Request
        if: ${{ steps.check_pr.outputs.count != 0 }}
        run: |
          pr_data=$(gh pr list -S '本番反映'in:title \
            --json "title" \
            | jq -c .[])
          TITLE="$(echo $pr_data | jq -r '.title')"
          echo $TITLE
          gh pr edit  ${{ github.ref_name }} \
            -t "${TITLE} / ${{ steps.check_pr.outputs.message }}"

      - name: Enable auto-merge for Pull Request
        if: ${{ steps.check_pr.outputs.count == 0 }}
        run: |
          pr_number=$(gh pr list -H ${{ github.ref_name }} --json number | jq -r '.[0].number')
          gh pr merge --auto --squash "$pr_number"
